# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: "ubuntu-16.04"

variables:
  tag: '$(buildnumber)'

steps:
- script:  sudo apt-get install libboost-all-dev
  displayName: 'dependency' 

- task: CmdLine@2
  inputs:
    script: 'g++ -std=c++11 -I/usr/include/boost/asio -I/usr/include/boost -o binary.out main.cpp
      connection.cpp connection_manager.cpp mime_types.cpp reply.cpp
      request_handler.cpp request_parser.cpp server.cpp -lboost_system -lboost_thread
      -lpthread'
  displayName: 'Compile code'

- task: CmdLine@2
  inputs:
    script: |
      c=$(git rev-parse --short=8 HEAD)
      echo $c
      a=$(Build.BuildNumber)
      a=$(echo $a|cut -f2 -d".")
      b=$((a+1))
      echo $b
      buildnumber=$a.$b.$c
      echo $buildnumber
      echo $buildnumber>>readme.txt
  displayName: 'update buildnumber'

- task: DockerInstaller@0
  inputs:
    dockerVersion: '17.09.0-ce'

- task: CmdLine@2
  inputs:
    script: |
      cat >> Dockerfile << 'EOF'
      # Get the GCC preinstalled image from Docker Hub
      FROM ubuntu:16.04
      # Download the dependency 
      RUN apt-get update && apt-get install -y libboost-all-dev
      # Copy the current folder which contains C++ source code to the Docker image under /usr/src
      RUN mkdir -p /usr/src/RWODevOpsTest
      COPY binary.out /usr/src/RWODevOpsTest
      COPY readme.txt /usr/src/RWODevOpsTest
      # Specify the working directory
      WORKDIR /usr/src/RWODevOpsTest
      # Run the program output from the previous step
      CMD ["./binary.out"]
      EOF
  displayName: 'create docker image'

- script: 'ls -lthr'
  displayName: 'checking files'
- script: 'pwd'
  displayName: 'checking files'
- script: 'cat readme.txt'
  displayName: 'checking files'

- script: 'cat Dockerfile'
  displayName: 'checking docker images'

- task: Docker@2
  displayName:  Docker Image Build
  inputs:
    command: build
    Dockerfile: /home/vsts/work/1/s/Dockerfile
    repository: cpluswebserver
    tags: |
      $(tag)

- script: 'docker build -t vivek151194/cpluswebserver:v1 /home/vsts/work/1/s/Dockerfile'
  displayName: 'creating docker image by script'
  
- script: 'docker image ls'
  displayName: 'checking docker images' 